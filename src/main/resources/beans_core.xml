<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
		                    http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
							http://www.springframework.org/schema/context 
							http://www.springframework.org/schema/context/spring-context-4.1.xsd  ">
							
     <!--  开启注解模式 -->
     <context:annotation-config/> 
     <!--  扫描注解包  -->
     <context:component-scan base-package="com.ujiuye"></context:component-scan>

	<!-- 数据库连接池对象 -->
	<context:property-placeholder location="classpath:config.properties"></context:property-placeholder>
	<!-- 阿里 druid数据库连接池 -->
	<bean id="ds" class="com.alibaba.druid.pool.DruidDataSource"  destroy-method="close">
		<!-- 数据库基本信息配置 -->
		<property name="url" value="${url}" />
		<property name="username" value="${jdbc_username}" />
		<property name="password" value="${jdbc_password}" />
		<property name="driverClassName" value="${driverClassName}" />
		<property name="filters" value="${filters}" />
		<!-- 最大并发连接数 -->
		<property name="maxActive" value="${maxActive}" />
		<!-- 初始化连接数量 -->
		<property name="initialSize" value="${initialSize}" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${maxWait}" />
		<!-- 最小空闲连接数 -->
		<property name="minIdle" value="${minIdle}" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />
		<property name="validationQuery" value="${validationQuery}" />
		<property name="testWhileIdle" value="${testWhileIdle}" />
		<property name="testOnBorrow" value="${testOnBorrow}" />
		<property name="testOnReturn" value="${testOnReturn}" />
		<property name="maxOpenPreparedStatements" value="${maxOpenPreparedStatements}" />
		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="${removeAbandoned}" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="${logAbandoned}" />
	</bean>


	<!-- spring 整合mybatis 使用的工具类 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">	   
		<property name="dataSource" ref="ds"></property>		
		<!--  扫描我们制定目录下的mapper.xml文件 
		      EmployeeMapper.xml
		      DeptMpper.xml
		-->		
		<property name="mapperLocations" value="classpath:com/ujiuye/mapper/*.xml"></property>
		<!-- 加载mybatis的配置文件 -->
		<property name="configLocation" value="classpath:sqlMapConfig.xml"></property>			
		<!-- 引入pagehelper分页插件 -->
		<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageInterceptor">
					<property name="properties">
						<value>
							helperDialect=mysql
							reasonable=true
							supportMethodsArguments=true
							params=count=countSql
							autoRuntimeDialect=true
						</value>
					</property>
				</bean>
			</array>
		</property>	
	</bean>

	<!-- 加载我们的mapper xml 和 mapper接口 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- setBasePackage(String) -->
		<property name="basePackage" value="com.ujiuye.mapper"></property>
	</bean>

	<!--<import resource="classpath:beans_transaction.xml"></import>-->
	
</beans>